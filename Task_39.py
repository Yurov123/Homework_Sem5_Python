# 39.	Создайте программу для игры с конфетами человек против человека.
# Условие задачи:
# На столе лежит 2021 конфета.
# Играют два игрока делая ход друг после друга.
# Первый ход определяется жеребьёвкой.
# За один ход можно забрать не более чем 28 конфет.
# Все конфеты оппонента достаются сделавшему последний ход.
# Сколько конфет нужно взять первому игроку, чтобы забрать все конфеты у своего конкурента?
#       a) Добавьте игру против бота
#       b) Подумайте, как наделить бота "интеллектом"

# ОТВЕТ: Чтобы выиграл первый игрок ему нужно первым ходом забрать остаток от целочисленного деления
# имеющегося количества конфет на то, которое можно взять за 1 ход максимально + 1
# В дальнейшем первому игроку нужно повторять стратегию
# Пример :  2021 % ( 28 + 1 ) = 20 , первый игрок первым ходом должен взять 20 конфет.
#           если вторым ходом второй игрок взял 10 конфет, то первый должен взять 28 + 1 - 10 = 19

# Игра с конфетами. Дано N конфет.
# Каждый игрок за каждый ход может взять не более M конфет.
# Побеждает игрок,забравший последние конфеты.

# man vs man

from random import *
import os
os.system("cls")


greeting = ('Игра "Забери все конфеты!" \n'
            'Основные правила игры: \n'
            'Нам будет дано некоторое количество конфет, \n'
            'за один ход мы можем взять не более определённого количества.\n'
            'Выигрывает тот, кто взял последние конфеты!\n'
            'Итак, начнём!\n')

messages = ['Ваша очередь брать конфеты', 'возьмите конфеты',
            'сколько конфет возьмёте?', 'ваш ход']


def candy(n):  # выбираем окончание для слова конфеты
    if n == 1 or n % 10 == 1:
        return 'а'
    elif 1 < n < 5 or 1 < n % 10 < 5:
        return 'ы'
    else:
        return ''


def play_game(n, m, players, messages):

    count = randint(0, 1)  # случайным образом выбираем кто ходит первым

    print(f'Первым ходит {players[count]}')

    while n > 0:
        # просим взять конфеты, проверяем правильное ли количество
        print(f'{players[count]}, {choice(messages)}')
        move = int(input())

        if move > n or move > m:
            print(f'Это слишком много, можно взять не более {m} конфет{candy(m)}, у нас всего {n} конфет{candy(n)}')

            # даём 3 попытки на взятие правильного количества конфет
            attempt = 3
            while attempt > 0:
                if n >= move <= m:
                    break
                print(f'Попробуйте ещё раз, у Вас {attempt} попытки')
                move = int(input())
                attempt -= 1
            else:
                return print(f'Game over!')

        n = n - move  # вычисляем остаток конфет
        if n > 0:
            print(f'Осталось {n} конфет{candy(n)}')
        else:
            print('Все конфеты разобраны.')

        count = (count + 1) % 2  # переход хода к следующему игроку

    return players[not count]


print(greeting)

player1 = input('Первый игрок: ')
player2 = input('Второй игрок: ')
players = [player1, player2]

n = int(input('Сколько конфет будем разыгрывать?  '))
m = int(input('Сколько максимально будем брать конфет за один ход? '))

winer = play_game(n, m, players, messages)
print(f'Поздравляю {winer}! Вы выиграли!\n')
